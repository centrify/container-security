# dockerfile.ubuntu.adjoininaudit
#
# Dockerfile to build auto-adjoin Ubuntu docker image with auditing enabled
#

FROM ubuntu:latest
#MAINTAINER
#LABEL

# install the required packages
RUN apt update && apt -y install \
    openssh-server \
    gnupg2 \
    && apt clean all
    

# steps needed to use systemd enabled docker containers.
ENV container docker

RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i = \
    systemd-tmpfiles-setup.service ] || rm -f $i; done);

VOLUME [ "/sys/fs/cgroup" ]

# systemd defines that shutdown signal as SIGRTMIN+3
STOPSIGNAL SIGRTMIN+3

# sshd setup
RUN mkdir /var/run/sshd \
    && ssh-keygen -y -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' \
    && sed -i '/^#\?ChallengeResponseAuthentication/c\ChallengeResponseAuthentication yes' /etc/ssh/sshd_config \
    && sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
RUN systemctl enable ssh.service
EXPOSE 22

#creating a copy of /etc/dpkg/dpkg.cfg and updating it to use GPG-signature key check.

RUN cp -p /etc/dpkg/dpkg.cfg /etc/dpkg/dpkg.centrify_backup
RUN sed -i '/no-debsig/s/^/#/g' /etc/dpkg/dpkg.cfg

# add Centrify repo

RUN wget -O - https://downloads.centrify.com/products/RPM-GPG-KEY-centrify | apt-key add -
COPY centrify.list /etc/apt/sources.list.d/centrify.list
RUN chmod 644 /etc/apt/sources.list.d/centrify.list

#install centrify direct control and direct audit package.
RUN apt update && apt-get -y install \ 
        centrifydc \
        centrifyda

# build time arguments
# DOMAIN: AD domain
# ADJOINER: AD user that has proper permissions to join the zone
# ZONE: zone to join the system to
# TENANT_URL: tenant URL

ARG DOMAIN
ARG ADJOINER
ARG ZONE
ARG TENANT_URL
ARG ENABLE_USE_MY_ACCOUNT 

RUN : "${DOMAIN:?Build argument DOMAIN must be set.}"
RUN : "${ADJOINER:?Build argument ADJOINER must be set.}"

# Install the Centrify Client only if UMA(Use My Account) feature is enabled.

RUN if [ "$ENABLE_USE_MY_ACCOUNT" = "Yes" ]  || [ "$ENABLE_USE_MY_ACCOUNT" = "yes" ] || [ "$ENABLE_USE_MY_ACCOUNT" = "True" ] || [ "$ENABLE_USE_MY_ACCOUNT" = "true" ]; then apt-get -y install centrifycc; fi

#restoring the /etc/dpkg/dpkg.cfg by the /etc/dpkg/dpkg.centrify_backup

RUN mv /etc/dpkg/dpkg.centrify_backup /etc/dpkg/dpkg.cfg

# environment variables
ENV DOMAIN $DOMAIN
ENV ADJOINER $ADJOINER
ENV ZONE $ZONE
ENV URL $TENANT_URL
ENV ENABLE_USE_MY_ACCOUNT $ENABLE_USE_MY_ACCOUNT

# the following variables are optional
# OU: OU/container to create computer account in, in DN format
# NAME: specify the computer name instead of using the default
# COMPUTER_ROLES: option computer roles
# ADJOIN_OPTION: optional parameters for adjoin

ENV OU="" NAME="" ADJOIN_OPTION=""
ENV COMPUTER_ROLES=""
ENV ROOT_PASSWORD=""
ENV CODE=""
ENV ADDRESS=""
ENV PORT=""
ENV CONNECTOR=""
ENV INSTALLATION=""
ENV ENABLE_NSS_AUDITING=""


# install adjoiner's credential
COPY adjoiner.keytab /etc/centrifydc/adjoiner.keytab
RUN chmod 400 /etc/centrifydc/adjoiner.keytab


# save the adjoin info so it can be used by the centrifydc-adleave service
RUN echo "ADJOINER=$ADJOINER" >> /usr/sbin/adjoin
RUN echo "ADJOINER_KEYTAB=/etc/centrifydc/adjoiner.keytab" >> /usr/sbin/adjoin

# create a new service to unjoin the system from AD before shutdown
COPY centrifydc-adleave.service /usr/lib/systemd/system/centrifydc-adleave.service
RUN chmod 644 /usr/lib/systemd/system/centrifydc-adleave.service
RUN systemctl enable centrifydc-adleave.service



#copy the cenrollagent service
#responsible for calling the cenroll.service and installing cagent
COPY centrifycc-cenroll.service /usr/lib/systemd/system/centrifycc-cenroll.service
RUN chmod 644 /usr/lib/systemd/system/centrifycc-cenroll.service


#Copy the unenroll service
COPY centrifycc-unenroll.service /usr/lib/systemd/system/centrifycc-unenroll.service

# install the adjoin startup script
COPY adjoin_startup.sh /tmp/adjoin_startup.sh
RUN chmod 500 /tmp/adjoin_startup.sh


CMD ["/tmp/adjoin_startup.sh"]
